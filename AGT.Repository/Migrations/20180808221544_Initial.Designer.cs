// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace AGT.Repository.Migrations
{
    [DbContext(typeof(DomainContext))]
    [Migration("20180808221544_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AGT.Domain.Users.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DefaultRolId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("Name", "Value");

                    b.HasIndex("DefaultRolId");

                    b.ToTable("Feature");
                });

            modelBuilder.Entity("AGT.Domain.Users.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Rol");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Rol");
                });

            modelBuilder.Entity("AGT.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");


                    b.HasAlternateKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AGT.Domain.Users.DefaultRol", b =>
                {
                    b.HasBaseType("AGT.Domain.Users.Rol");


                    b.ToTable("DefaultRol");

                    b.HasDiscriminator().HasValue("DefaultRol");
                });

            modelBuilder.Entity("AGT.Domain.Users.Feature", b =>
                {
                    b.HasOne("AGT.Domain.Users.DefaultRol")
                        .WithMany("Features")
                        .HasForeignKey("DefaultRolId");
                });

            modelBuilder.Entity("AGT.Domain.Users.Rol", b =>
                {
                    b.HasOne("AGT.Domain.Users.User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
